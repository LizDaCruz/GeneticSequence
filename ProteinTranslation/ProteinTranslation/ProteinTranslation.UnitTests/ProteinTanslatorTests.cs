using NUnit.Framework;
using ProteinTranslation.Core;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ProteinTranslation.UnitTests
{
    public class ProteinTanslatorTests
    {
        [TestCase("ACTATGCTCTAACAT", "L")]
        [TestCase("TGGAATTTCGTGCATAGATCGGTTAATGACATATGCGTCGAACTAGGACCAACCGTAAGGATTCCGTGACTGTTATCTGATCCTGCAGGGTAAGCCGAGCCCCGAAATAAGGCGCAGTACAACCTCCGTAATAGTTCATCCTTGCGGACACAAGGTTGTAAAATCACTACGTATCACTAGCGCGCTAGCCTTAATGGCTTT")]
        [TestCase("ACTGTGCTCCGCCATAAATTTCGAGAATATACGAGCCTTTAAATGGCCAATGGCACCTGCGGGCGGTACCAAATAAATTTAAGGGATCCAGCGGTTAGAGGTCCGACACCTATTTCTCGTAATGTCCTACTGTCCTGTTTCGTAGCTTCGAAGCACCAGAATTTGGAGAGTGCACCCGGATGGTGAATCAATTCAGACTAG", "ANGTCGRYQINLRDPAVRGPTPISRNVLLSCFVASKHQNLESAPGW")]
        [TestCase("TGGATGATGCATGACTCCAGTCGGAATCACCCAGCTTTTAGAACGGCGGGTTGAATTAAGGGGCGTACCAAATGTTCAGTAGGAAGGTAAGAGGTCCGCCCGGTGATGACATCGTAGCTGGGCTTACCTTATATATTGGAA", "MHDSSRNHPAFRTAG", "TS")]
        [TestCase("TGGCCCTATCGAGGGCGTGTAATTGTTAACCAAGGAAGTCCTATGTTTAGACGGACTCTGTTATCACAGATGTCTTGCTTGAGCTAACCGCTTATCGAAGTGATGCCATAGAAGCACGCTTCCTGTGCAATGGTCTTCACGTCGTACTGACTCAATGACACCCTAGAGCGCAAAGATGCGATAGCCCATAGGACAGGTGGC", "FRRTLLSQMSCLS", "P", "VFTSY")]
        [TestCase("TggccctatcgaGGGCGTGTAATTGTTAACCAAGGAAGTCCTATGTTTAGACGGACTCTGTTATCACAGATGTCTTGCTTGAGCTAACCGCTTATCGAAGTGATGCCATAGAAGCACGCTTCCTGTGCAATGGTCTTCACGTCGTACTGACTCAATGACACCCTAGAGCGCAAAGATGCGATAGCCCATAGGACAGGTGGC", "FRRTLLSQMSCLS", "P", "VFTSY")]
        public void TranslateDNA_ValidInput_ProducesCorrectResult(string dna, params string[] expectedProteins)
        {
            var sut = new ProteinTranslator(new CodonRepository());

            var proteins = sut.TranslateDNA(dna);

            Assert.IsTrue(Enumerable.SequenceEqual(expectedProteins, proteins));
        }

        [TestCase("Partial Protein", "TGGATGATGCATGACTCCAGTCGGAATCACCCAGCTTTTAGAACGGCGGGTTGAATTAAGGGGCGTACCAAATGTTCAGTAGGAAGGTAAGAGGTCCGCCCGGTGATGACATCGTAGCTGGGCTTACCTTATATATTGGAATACCAAGTTCTTCGATTCCCCTCTATCCAGATGAGCTGCAACGATGCCCTACTCACTGCA")]
        [TestCase("Partial Codon", "TGGATGATGCATGACTCCAGTCGGAATCACCCAGCTTTTAGAACGGCGGGTTGAATTAAGGGGCGTACCAAATGTTCAGTAGGAAGGTAAGAGGTCCGCCCGGTGATGACATCGTAGCTGGGCTTACCTTATATATTGGAATACCAAGTTCTTCGATTCCCCTCTATCCAGATGAGCTGCAACGATGCCCTACTCACTGCAG")]
        [TestCase("Partial Codon", "TGGATGATGCATGACTCCAGTCGGAATCACCCAGCTTTTAGAACGGCGGGTTGAATTAAGGGGCGTACCAAATGTTCAGTAGGAAGGTAAGAGGTCCGCCCGGTGATGACATCGTAGCTGGGCTTACCTTATATATTGGAATACCAAGTTCTTCGATTCCCCTCTATCCAGATGAGCTGCAACGATGCCCTACTCACTGC")]
        [TestCase("Partial Codon", "TGGATGATGCATGACTCCAGTCGGAATCACCCAGCTTTTAGAACGGCGGGTTGAATTAAGGGGCGTACCAAATGTTCAGTAGGAAGGTAAGAGGTCCGCCCGGTGATGACATCGTAGCTGGGCTTACCTTATATATTGGAATACCAAGTTCTTCGATTCCCCTCTATCCAGATGAGCTGCAACGATGCCCTACTCACTG")]
        [TestCase("Invalid Char", " ACTGTGCTC")]
        [TestCase("Invalid Char", "ACTGTGCTC ")]
        [TestCase("Invalid Char", "UCTGTGCTC")]
        [TestCase("Invalid Char", "1CTGTGCTC")]
        [TestCase("Invalid Char", "zCTGTGCTC")]
        [TestCase("Invalid Char", "%CTGTGCTC")]
        public void TranslateDNA_InvalidInput_Throws(string comment, string dna)
        {
            var sut = new ProteinTranslator(new CodonRepository());

            Assert.Throws<ArgumentException>(() => sut.TranslateDNA(dna), comment);
        }

        [TestCase("UGAUACGAGAUUGUA", "L")]
        [TestCase("ACCUUAAAGCACGUAUCUAGCCAAUUACUGUAUACGCAGCUUGAUCCUGGUUGGCAUUCCUAAGGCACUGACAAUAGACUAGGACGUCCCAUUCGGCUCGGGGCUUUAUUCCGCGUCAUGUUGGAGGCAUUAUCAAGUAGGAACGCCUGUGUUCCAACAUUUUAGUGAUGCAUAGUGAUCGCGCGAUCGGAAUUACCGAAA", "")]
        [TestCase("UGACACGAGGCGGUAUUUAAAGCUCUUAUAUGCUCGGAAAUUUACCGGUUACCGUGGACGCCCGCCAUGGUUUAUUUAAAUUCCCUAGGUCGCCAAUCUCCAGGCUGUGGAUAAAGAGCAUUACAGGAUGACAGGACAAAGCAUCGAAGCUUCGUGGUCUUAAACCUCUCACGUGGGCCUACCACUUAGUUAAGUCUGAUC", "ANGTCGRYQINLRDPAVRGPTPISRNVLLSCFVASKHQNLESAPGW")]
        [TestCase("ugacacgaGGCGGUAUUUAAAGCUCUUAUAUGCUCGGAAAUUUACCGGUUACCGUGGACGCCCGCCAUGGUUUAUUUAAAUUCCCUAGGUCGCCAAUCUCCAGGCUGUGGAUAAAGAGCAUUACAGGAUGACAGGACAAAGCAUCGAAGCUUCGUGGUCUUAAACCUCUCACGUGGGCCUACCACUUAGUUAAGUCUGAUC", "ANGTCGRYQINLRDPAVRGPTPISRNVLLSCFVASKHQNLESAPGW")]
        public void TranslateRNA_ValidInput_ProducesCorrectResult(string rna, string expectedProtein)
        {
            var sut = new ProteinTranslator(new CodonRepository());

            var protein = sut.TranslateRNA(rna);

            Assert.AreEqual(expectedProtein, protein);
        }

        [TestCase("Partial Protein", "ACCUACUACGUACUGAGGUCAGCCUUAGUGGGUCGAAAAUCUUGCCGCCCAACUUAAUUCCCCGCAUGGUUUACAAGUCAUCCUUCCAUUCUCCAGGCGGGCCACUACUGUAGCAUCGACCCGAAUGGAAUAUAUAACCUUAUGGUUCAAGAAGCUAAGGGGAGAUAGGUCUACUCGACGUUGCUACGGGAUGAGUGACGU")]
        [TestCase("Partial Protein", "ACCUACUACGUACUGAGGUCAGCCUUAGUGGGUCGAAAAUCUUGCCGCCCAACUUAAUUCCCCGCAUGGUUUACAAGUCAUCCUUCCAUUCUCCAGGCGGGCCACUACUGUAGCAUCGACCCGAAUGGAAUAUAUAACCUUAUGGUUCAAGAAGCUAAGGGGAGAUAGGUCUACUCGACGUUGCUACGGGAUGAGUGACGUG")]
        [TestCase("Partial Protein", "ACCUACUACGUACUGAGGUCAGCCUUAGUGGGUCGAAAAUCUUGCCGCCCAACUUAAUUCCCCGCAUGGUUUACAAGUCAUCCUUCCAUUCUCCAGGCGGGCCACUACUGUAGCAUCGACCCGAAUGGAAUAUAUAACCUUAUGGUUCAAGAAGCUAAGGGGAGAUAGGUCUACUCGACGUUGCUACGGGAUGAGUGACG")]
        [TestCase("Partial Protein", "ACCUACUACGUACUGAGGUCAGCCUUAGUGGGUCGAAAAUCUUGCCGCCCAACUUAAUUCCCCGCAUGGUUUACAAGUCAUCCUUCCAUUCUCCAGGCGGGCCACUACUGUAGCAUCGACCCGAAUGGAAUAUAUAACCUUAUGGUUCAAGAAGCUAAGGGGAGAUAGGUCUACUCGACGUUGCUACGGGAUGAGUGAC")]
        [TestCase("Multiple Proteins", "ACCUACUACGUACUGAGGUCAGCCUUAGUGGGUCGAAAAUCUUGCCGCCCAACUUAAUUCCCCGCAUGGUUUACAAGUCAUCCUUCCAUUCUCCAGGCGGGCCACUACUGUAGCAUCGACCCGAAUGGAAUAUAUAACCUU")]
        [TestCase("Multiple Proteins", "ACCGGGAUAGCUCCCGCACAUUAACAAUUGGUUCCUUCAGGAUACAAAUCUGCCUGAGACAAUAGUGUCUACAGAACGAACUCGAUUGGCGAAUAGCUUCACUACGGUAUCUUCGUGCGAAGGACACGUUACCAGAAGUGCAGCAUGACUGAGUUACUGUGGGAUCUCGCGUUUCUACGCUAUCGGGUAUCCUGUCCACCG")]
        [TestCase("Invalid Char", "ACCUACUAC ")]
        [TestCase("Invalid Char", " ACCUACUAC")]
        [TestCase("Invalid Char", "TCCUACUAC")]
        [TestCase("Invalid Char", "2CCUACUAC")]
        [TestCase("Invalid Char", "zCCUACUAC")]
        [TestCase("Invalid Char", "%CCUACUAC")]
        public void TranslateRNA_InvalidInput_Throws(string comment, string rna)
        {
            var sut = new ProteinTranslator(new CodonRepository());

            Assert.Throws<ArgumentException>(() => sut.TranslateRNA(rna), comment);
        }
    }
}
